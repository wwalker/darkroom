#!/usr/bin/env jruby

require 'i3ipc'

LIMIT=25
$inverted = false

def is_inverted?
  return $inverted
  # map_data = `xcalib -a -p`
  # return !map_data.match(/\A0 0 0/)
end

def get_blocks
  return [[0,0,959,539],[2860,0,3839,539],[0,1620,959,2159],[2860,1620,3839,2159]]
end

def get_current_brightness
  puts __LINE__
  blocks = get_blocks
  puts __LINE__
  current_brightness_data = `time scrot /tmp/root.png; time convert /tmp/root.png -colorspace gray -format "%[fx:100*mean]" info:`
  puts __LINE__
  return current_brightness_data.to_f
end

def invert_colormap
  `xcalib -a -i`
#  `xrandr-invert-colors`
  $inverted = ! $inverted
end

i3 = I3Ipc::Connection.new
block = Proc.new do |reply|
  puts __LINE__
  puts reply.change
  $check_it = true
  sleep 0.005
end

i3.subscribe('window', block)

while true do
  sleep 0.010
  if $check_it
    $check_it = false
    puts Time.now.to_s + ' - check'
    inverted = is_inverted?
    puts "\tinverted: #{inverted}"
    puts "\tinverted: #{inverted}"
    brightness = get_current_brightness
    puts "\tbrightness: #{brightness}"
    if (brightness < 15 and inverted) or (brightness > 85 and not inverted)
      invert_colormap
    end
  end
end

